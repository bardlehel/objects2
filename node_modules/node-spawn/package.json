{
  "_args": [
    [
      {
        "raw": "node-spawn@0.0.7",
        "scope": null,
        "escapedName": "node-spawn",
        "name": "node-spawn",
        "rawSpec": "0.0.7",
        "spec": "0.0.7",
        "type": "version"
      },
      "/home/lehel/dev/objects2"
    ]
  ],
  "_from": "node-spawn@0.0.7",
  "_id": "node-spawn@0.0.7",
  "_inCache": true,
  "_location": "/node-spawn",
  "_phantomChildren": {},
  "_requested": {
    "raw": "node-spawn@0.0.7",
    "scope": null,
    "escapedName": "node-spawn",
    "name": "node-spawn",
    "rawSpec": "0.0.7",
    "spec": "0.0.7",
    "type": "version"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/node-spawn/-/node-spawn-0.0.7.tgz",
  "_shasum": "843f92ce711caf9ca1ad1abafe931bb3ee2da9ea",
  "_shrinkwrap": null,
  "_spec": "node-spawn@0.0.7",
  "_where": "/home/lehel/dev/objects2",
  "author": {
    "name": "Stephen Bartell"
  },
  "bugs": {
    "url": "https://github.com/snbartell/node-spawn/issues"
  },
  "dependencies": {},
  "description": "A thin wrapper around `child_process.spawn` which provides restarts.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "843f92ce711caf9ca1ad1abafe931bb3ee2da9ea",
    "tarball": "https://registry.npmjs.org/node-spawn/-/node-spawn-0.0.7.tgz"
  },
  "homepage": "https://github.com/snbartell/node-spawn#readme",
  "keywords": [
    "supervisor",
    "forever",
    "uptime"
  ],
  "license": "BSD",
  "main": "./main.js",
  "maintainers": [
    {
      "name": "snbartell",
      "email": "snbartell@gmail.com"
    }
  ],
  "name": "node-spawn",
  "optionalDependencies": {},
  "readme": "node-spawn\n==========\n\nA thin wrapper around `child_process.spawn` which provides restarts.\n\n## API ##\n\n### Spawn(options) ###\n\nConstructor. Sets the stage for the child process.\n\n__Arguments__\n\nOptions - Object - (req)\n\n* cmd - String - (req) Current working directory of the child process\n* env - Object - (opt) Environment key-value pairs \n* cwd - Object - (opt) Absolute working directory of the child process\n* args - Array - (opt) List of string arguments\n* restarts - Integer - (opt) After death, how many times to restart\n* * -1: forever\n* * 0: no restarts\n* * x: restart x-times \n* restartDelay - Decimal - (opt) Delay between restarts\n* onStdout - Function - (opt) callback for child.stdout\n* onSterr - Function - (opt) callback for child.stderr\n\n__Defaults__\n\n\n__Example__\n\n```js\n// simple example\n\nspawn = Spawn({\n    cmd: 'echo'\n  , args: ['i love pancakes!']\n})\n```\n\n```js\n// make sure to use absolute path\n\nspawn = Spawn({\n    cmd: 'ilove.sh'\n  , args: ['pancakes!']\n  , cwd: '/Users/steve/git/scripts'\n})\n```\n\n---------------------------------------\n\n### start ###\n\nStart the cmd with the options provided.\n\n__Arguments__\n\nNone\n\n---------------------------------------\n\n### once ###\n\nConvenience function.  Overides `options.restarts` to `0`. Runs command exactly once no matter the options passed into the constructor.\n\n---------------------------------------\n\n### forever  ###\n\nConvenience function. Overides `options.restarts` to `-1`. Runs command indefinitely no matter the options passed into the constructor.\n\n---------------------------------------\n\n### kill ###\n\nShut down the child and dont let it restart.\n\n\n\n\n\n\n\n",
  "repository": {
    "type": "git",
    "url": "git://github.com/snbartell/node-spawn.git"
  },
  "version": "0.0.7"
}
